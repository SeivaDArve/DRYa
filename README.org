* DRYa - Don't Repeat Yourself (app)

[[DRYa ASCII icon][./all/etc/dot-files/drya/D-jpg.jpg]]

** DRYa acronym
Don't Repeat Yourself (app) 
It is a style of coding (DRY) applied here, terminal based app (TUI) with shortcuts of every day life tasks
** Description
3 in 1: Learning to build software; Software to supress repetitive tasks; Software to become software/hradware agnostic

This repo is the link fand manager for many other repos

Built on top of the DRY principle (Don't Repeat Yourself)

It is a project of a seft-taught student who writes code for people to read and run, not only for machines no run. If you read a script, your english is enought to allow understanding

This project is a natural tendency for any entusiastic programmer, it is like a second Brain, all third-party software has it's commands and alias and DRYa the 'wrap around' those commands for better enjoymient of it's user...

Manages my Public and Private software. 

** Why Bash?
Bash allows my Repo and Programming to achieve: Holy trinity
   - Cross-Platform (and stardard in most machines (Omnipresent))
   - Fully featured (all I needed was already there (Omnipotent))
   - Allows me to carry all my info and web scrapers (Omniscient)

** Further Description
When using any smart device or any computer, there are too many things that may become repetitive.
Some examples are:
   - After formating your machine, installing all the apps again may be repetitive
   - If you want to perform same tasks everyday, pressing more that one 'start' button and one 'stop' button may be repetititive
   - If you are frequently installing and uninstalling software, configuring the keyboard, preferences, dot files may be repetitive
   - If you use your terminal as your IDE (your editor of choice for programming), not having shortcuts for long commands may be repetitive
   - If you are learning/studying any topic, either for school or for yourseflf, not having a personal wikipedia may be repetitive
   - If you own a smartphone and you don't have a trusted personal assistant, your life may be repetitive
   - For the author, downloading this repository is a shortcut to download every other repository, because it's database aids in the process
   - This repository travels in the author's pocket. Bash runs EVERYWHERE. It is the defaulf shell for Linux, it can run on Windows under WSL and if you install a terminal on you Android or your iPhone like Termux, then you have a software that runs everywhere

This script is a personal software 'configurator', whenever the author finds dificulty in life and a solution is found, it gets centralized in this repository in some way
This repository fits perfectly to it's owner at least. 
 
** Termux (terminal for Android and iPhone)
This repository is written in Bash and Pyhton
Both programming languages can run on Linux, Windows, Mac, Android (Using Termux) and iPhone (Using Termux)
That means that this software is cross-platform just like any personal assistant should be

For the enthusiastic programmer: Iron man (from the Marvel comics) was a programmer. Where the Iron Suit was like Termux (a dedicated command line, programmed to recognize voice and user input to extend the user habilities)


** Brainstorming
Do you have config files that you keep installing/removing/installing/removing?
 - This app automates such process for me

 - drya should be the first program installed as soon as you touch any new machine and then can deploy your personal configs
This is a list of all ideas to be put into the project before starting coding
- "If you don't have good friends, program one".
- When you open drya app, it should work like a browser where your installed apps may be bookmarked to appear at the main page (gitMenu, jarve, combyene, mia, etc...)
- drya is supposed to be a "software bender". It means that the user may be able to do every single thing in real life with the help of drya nust by givinh simple commands. "If you don't have good friends, program one".
- This script is an incentive to always tweak your machine by the command line OR to automate all GUI tasks, so that you don't have to repeat them
- This is also the result of a Linux newbie studying and creating a cross platform app from scratch. I don't think there is no better exercise to practice Linux other than developing my own cross platform util. Drya is a git repository that after downloading, gives you the choice to depoy into your system, a software buttler. The bash buttler (the main one so far) is called Jarve.

Install one of these utilities to backup your config files and this way, after a fresh format, all your settings will be there. You may use this software to improve your tasks, making your computer (machine) work for you instead of you working for the machine. You should simply automate your tasks once and save them at your choosen Butler.
"Don't + Repeat + Yourself + Application": Your personal assistant. Similar to Alexa, Cortana, Siri, jarvis... but as a config and a content manager. Keep your tools, stuff and workflow always up to date in all your devices. Later domotics will be added to the project with proper documentation until it becomes Fool/Noob proof.

** Instalation
1 - If you are using any distro of linux (or even termux with bash) create a directory dedicated for repositories (for example: ~/Repositories)

2 - Change directory to get inside the choosen directory and clone DRYa into it (if you already did clone DRYa somewhere else, just move the directory into that place)

3 - run the install.sh script and the script will plave 3 lines of code inside your ~/.bashrc file that loads DRYa on terminal startup

4 - This repository can install every other repositories from the same author. The majority of software options already come inside DRYa like the phone finder by GPS, car finder by GPS, directory looper etc... (this README.md is under development also)

** Learning Bash On-the-Go
This app is at the same time a notebook, where every function is commented above telling in plain english what it does

Self documented script. Usually when people have doubts about the usage of the program/app/script, they search for the manual page. 
in case of linux you can type at the terminal '$ man <app-name-here>'
But this app/script does something better. This app IS NOT COMPILED, therefore the user can see the source code always. It may lose some speed (CPU speed) but you (the user) can read the source code the same way the programmer did (knowing EVERYTHING about the app and learning Bash on-the-go)

DRYa has it's own style and organization for best read and fast understanding
** Coding style (syntax)
*** #uDev
Something "under develpment" where work is in progress. Lists something to be done soon in the future: List... List... List
If you read the source code you will find many many comments of my own code (Learning bash by practice)
And you will also find another kind of comment "# uDev: Under Development" which are a message to my future self, some idea to remember
If you wish to co-op then you may find these comments and try to script yourself
*** drya-fast-tg-sys-vars
   This text is something you can find on DRYa scripts (Fast Toggle System for Variables from DRYa)

   Some software options are ready to use only in the backend. When frontend menus are not ready to use and to toggle settings, then the fastest way to toggle configs is to set the varible of a specific config in several lines (as many lines as the options there are for such variable). The last line is again the same variable beeing set and overwritting all previous lines of the same variable beeing set.

   The text editor Vim has an hotkey to swap 2 text lines. Put the cursor on the line you want to move and delete it with hotkey `dd`. The past it imediatly on the line bolow with 'p'. In case you want to past in the previous line instead on the next line, press 'P' instead of 'p'

   Exemple (bash): Setting the same var 2x (the last time, overwrites all the orevious):
       v_variable="Tree"
       v_variable="Cat"
       echo "Variable contains: $v_variable"

       Result: "Variable contains: Cat"
*** f_function v_variable c_variables_ascii

   f_function_names                       (Helps A LOT to read code. gives the starting common pattern f_ and helps distinguish from v_ variables)
   v_variable_names                       (instead all Caps variables, as default for $BASH)
   c_variables_of_text_but_for_ansi_codes (usually containing backspaces already)
   

** Modular software (list of apps under DRYa)
*** Jarve
DRYa attempts to be cross platform first, grows from inside-out. Starts small and swallows bug on it's current OS. In the end we get a menu called DRYa where we command "install me this software" and this menu recognizes the system and accordingly pleases the user. If uses software first
Jarve attempts to populate far away machines first, grows from the outside-in. It is the aplication on domotics, eletronics, cheat sheets, gadgets for the user that may connect with DRYa. Examples are: Automation of the door bell. Automation of a car. Automation of a washing machine. It uses hardware first. A DIY project

** DRYa, termux and Formting your pc
Do you need to format your machine? DRYa may help you while your machine is offline, guiding your steps through the installation. You should also save your configs during the installation into DRYa so that the nest time you remember. By remembering your previous user nickname (for example), DRYa may restore all your config files into the fresh install without them breaking (if your saved configs have another user name, they will not correspond with the new user name, right?)

** Webpage
Not public yet

** Author
The author is David Rodrigues, also known everywhere as Flowreshe Seiva Naghori D'arve.

** GitHub - "Seiva D'Arve"
| Overview     | https://github.com/SeivaDArve                   |
| Repositories | https://github.com/SeivaDArve?tab=repositories  |

** QR Code (link to open DRYa's Github page directly from another device)
uDev

** Installing DRYa:

For the non power user, this is the best sequence of steps to take and install DRYa

| Step | Description                                                | Command to copy onto the terminal                                                         |
|------+------------------------------------------------------------+-------------------------------------------------------------------------------------------|
|    1 | Instaling dependencies first                               | sudo apt install git fzf                                                                  |
|------+------------------------------------------------------------+-------------------------------------------------------------------------------------------|
|    2 | Clone DRYa spefically to "$HOME/Repositories/DRYa" folder  | git clone https://github.com/SeivaDArve/DRYa.git $HOME/Repositories/DRYa                  |
|      |                                                            |                                                                                           |
|      | (optional):  change destination to other folder or else it |                                                                                           |
|      |              will be cloned exactly to the directory where |                                                                                           |
|      |              your prompt is currently at                   |                                                                                           |
|------+------------------------------------------------------------+-------------------------------------------------------------------------------------------|
|    3 | Installing DRYa                                            | bash $HOME/Repositories/DRYa/install.uninstall/linux-or-WSL/master-bashrc/1-installer.sh` |
|------+------------------------------------------------------------+-------------------------------------------------------------------------------------------|
