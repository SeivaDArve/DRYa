#!/bin/bash
# Title: pk
# Description: Abreviation to command 'pkg-manager' 
#              Var $pkgm might be: apt, pacman, dnf, zypper, apk, brew (check traitsID.sh to make sure)

# Use: After 'traitsID.sh' detects sysrem variables like package manager, independently of what it is the package manager stored in $trid_pkgm (dnf, apt, pkg) this script `pk` will wrap around it
#
#      Example with `dnf install <package-X>`: `pk + <package-X>`
#      Example with `pacman -S   <package-X>`: `pk + <package-X>`


v_talk="DRYa: (pk + $trid_pkgm):"






#  # uDev: 
#     f_pkg() {
#
#        # Instead of using this:
#           [[ $1 == "+" ]] && [[ $trid_pkgm == "pkg" ]] && shift && $pkgm install $*
#
#        # Use this instead, by returning 1 or 0
#           [[ $1 == "+" ]] && f_pkg && $pkgm install $*
#
#        # By using something like this fx
#           if [[ -z $trid_pkgm ]]; then
#              [[ -z $1 ]] && echo 'Help: `pk --help`'
#              return false
#              exit 1
#           elif [[ $trid_pkgm == "pkg"    ]]; then
#              shift 
#              return true
#           else
#              return false
#           fi
#
#        # Ou seja, uma fx que simplifica o texto longo, tipo:
#           f_apt && [[ $1 == "+" ]] && sudo $pkgm install $*
#           f_pac && [[ $1 == "+" ]] && sudo $pkgm install $*
#           f_dnf && [[ $1 == "+" ]] && sudo $pkgm install $*
#           f_apk && [[ $1 == "+" ]] && sudo $pkgm install $*
#           f_pkg && [[ $1 == "+" ]] && sudo $pkgm install $*
#           f_brw && [[ $1 == "+" ]] && sudo $pkgm install $*
#           f_zyp && [[ $1 == "+" ]] && sudo $pkgm install $*
#     }
#
#
#
#
#
#
#


# uDev: adicionar pakage manager 'xcode-select' do mac book



# Testing if any command was given first
   [[ -z $1        ]] && echo 'Help: `pk --help`'

# Adding packages
   [[    $1 == "+" ]] && [[ -z $trid_pkgm             ]] && echo "Variable not set: \$trid_pkgm" 
   [[    $1 == "+" ]] && [[    $trid_pkgm == "apt"    ]] && shift && sudo $pkgm install $*
   [[    $1 == "+" ]] && [[    $trid_pkgm == "pacman" ]] && shift && sudo $pkgm -S      $*
   [[    $1 == "+" ]] && [[    $trid_pkgm == "dnf"    ]] && shift && sudo $pkgm install $*
   [[    $1 == "+" ]] && [[    $trid_pkgm == "apk"    ]] && shift &&      $pkgm add     $*
   [[    $1 == "+" ]] && [[    $trid_pkgm == "pkg"    ]] && shift &&      $pkgm install $*
   [[    $1 == "+" ]] && [[    $trid_pkgm == "brew"   ]] && shift &&      $pkgm install
   [[    $1 == "+" ]] && [[    $trid_pkgm == "zypper" ]] && echo "uDev" 

# Removing packages
   [[    $1 == "-" ]] && [[ -z $trid_pkgm             ]] && echo "Variable not set: \$trid_pkgm" 
   [[    $1 == "-" ]] && [[    $trid_pkgm == "apt"    ]] && shift && sudo $pkgm remove $*
   [[    $1 == "-" ]] && [[    $trid_pkgm == "pacman" ]] && shift && sudo $pkgm -R     $*
   [[    $1 == "-" ]] && [[    $trid_pkgm == "dnf"    ]] && shift && sudo $pkgm remove $*
   [[    $1 == "-" ]] && [[    $trid_pkgm == "apk"    ]] && echo "udev"
   [[    $1 == "-" ]] && [[    $trid_pkgm == "pkg"    ]] && shift &&      $pkgm remove $*
   [[    $1 == "-" ]] && [[    $trid_pkgm == "brew"   ]] && shift &&      $pkgm remove
   [[    $1 == "-" ]] && [[    $trid_pkgm == "zypper" ]] && echo "uDev" 

# So Atualizar 
   [[    $1 == "^" ]] && [[ -z $trid_pkgm             ]] && echo "Variable not set: \$trid_pkgm" 
   [[    $1 == '^' ]] && [[    $trid_pkgm == "pacman" ]] && echo "DRYa: pk:" && echo " > No arch, sÃ³ atualizar sem upgrade pode dar conflitos, por criar Upgrades Parciais, recomenda-se Ambos" && read -sn1 && sudo pacman -Syu

# Atualizar + Upgrade
   [[    $1 == "^^" ]] && [[ -z $trid_pkgm             ]] && echo "Variable not set: \$trid_pkgm" 
   [[    $1 == '^^' ]] && [[    $trid_pkgm == "pacman" ]] && sudo pacman -Syu

# Testing existence of packages
   # uDev: Adicionar variavel com o ultimo status: v_last_check="installed" and v_last_check="not-installed"
   [[    $1 == '??' ]] && [[ $trid_pkgm == "pacman" ]] && (shift; for i in $*; do pacman -Qi $i                &> /dev/null && v_last_check="installed" && echo "$v_talk | [X] Instalado   | '$i' " || v_last_check="not-installed" && echo "$v_talk | [ ] N Instalado | '$i' "; done)
   [[    $1 == '??' ]] && [[ $trid_pkgm == "pkg"    ]] && (shift; for i in $*; do pkg list-installed | grep $i &> /dev/null && v_last_check="installed" && echo "$v_talk | [X] Instalado   | '$i' " || v_last_check="not-installed" && echo "$v_talk | [ ] N Instalado | '$i' "; done)



