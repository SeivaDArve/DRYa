### After making changes and saving you need to run `termux-reload-settings`
### to update the terminal.  All information here can aso be found on the
### wiki: https://wiki.termux.com/wiki/Terminal_Settings

### You can also run the manpage command to see the possible variable values: man termux

###############
# General
###############

### Allow external applications to execute arbitrary commands within Termux.
### This potentially could be a security issue, so option is disabled by
### default. Uncomment to enable.
allow-external-apps = true

### Default working directory that will be used when launching the app.
# default-working-directory = /data/data/com.termux/files/home

### Uncomment to disable toasts shown on terminal session change.
# disable-terminal-session-change-toast = true

### Uncomment to not show soft keyboard on application start.
# hide-soft-keyboard-on-startup = true

### Uncomment to let keyboard toggle button to enable or disable software
### keyboard instead of showing/hiding it.
# soft-keyboard-toggle-behaviour = enable/disable

### Adjust terminal scrollback buffer. Max is 50000. May have negative
### impact on performance.
# terminal-transcript-rows = 2000

### Uncomment to use volume keys for adjusting volume and not for the
### extra keys functionality.
### It can have 2 values ('volume' to control sound as usual and 'virtual' which is the default and it is used to enable special keys)
volume-keys = volume

###############
# Fullscreen mode
###############

### Uncomment to let Termux start in full screen mode.
# fullscreen = true

### Uncomment to attempt workaround layout issues when running in
### full screen mode.
# use-fullscreen-workaround = true

###############
# Cursor
###############

### Cursor blink rate. Values 0, 100 - 2000.
terminal-cursor-blink-rate = 600

### Cursor style: block, bar, underline.
# terminal-cursor-style = block

###############
# Extra keys
###############

# Tutorial: https://wiki.termux.com/wiki/Touch_Keyboard

### Settings for choosing which set of symbols to use for illustrating keys.
### Choose between default, arrows-only, arrows-all, all and none
# extra-keys-style = default

### Force capitalize all text in extra keys row button labels.
# extra-keys-text-all-caps = true

### Default extra-key configuration
# extra-keys = [[ESC, TAB, CTRL, ALT, {key: '-', popup: '|'}, DOWN, UP]]

### Two rows with more keys
# extra-keys = [['ESC','/','-','HOME','UP','END','PGUP'], \
#               ['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','PGDN']]

### Termux acepts Unicode characters
# Example list: https://symbl.cc/en/unicode/table/#arabic-extended-b
#               ·óï ·óí ﬂ∑ ‡•ê ·Øû ·Øé ·Øì ·Ø• ·Ø§ ‚Ü¶ ‚Ü§ ‚áù ‚áú ‚á¢ ‚á† ‚áß ‚á© ‚å• ‚åò ‚å§ ‚á™ ‚òØ ‚§æ ê´∞ ·ôÑ  ‚Éî  ‚Éï ‚éÜ ‚éò ‚éó ‚éã ‚éå ‚êõ ‚çæ ‚éé ‚èª ‚èº ‚èæ ‚êÄ ‚ê° ‚ê£ ‚ú° ‚ú∞ ‚´∂ ‚¨ö ·ó• ·ç¢ ‚éô ‚èç ‚èö ‚è¶ ‚éì ‚ò§ ‚óØ ‚ñ°  (‚òê ‚òë ‚òí) ‚úì ‚úó ‚úò ‚ÆΩ ‚àë ‚åÇ ‚í∂ ‚í∑ ‚®≠ ‚®Æ ‚´ó ‚´ò ìÉ∏ ·â≤ ·çê ·ñΩ ·úé ·∞ô ‚Ç∏
# Configuration Key (defaulf)
   ### Configuration with additional popup keys (swipe up from an extra key)
   # extra-keys = [[ \
   #   {key: ESC, popup: {macro: "CTRL f d", display: "tmux exit"}}, \
   #   {key: CTRL, popup: {macro: "CTRL f BKSP", display: "tmux ‚Üê"}}, \
   #   {key: ALT, popup: {macro: "CTRL f TAB", display: "tmux ‚Üí"}}, \
   #   {key: TAB, popup: {macro: "ALT a", display: A-a}}, \
   #   {key: LEFT, popup: HOME}, \
   #   {key: DOWN, popup: PGDN}, \
   #   {key: UP, popup: PGUP}, \
   #   {key: RIGHT, popup: END}, \
   #   {macro: "ALT j", display: A-j, popup: {macro: "ALT g", display: A-g}}, \
   #   {key: KEYBOARD, popup: {macro: "CTRL d", display: exit}} \
   # ]]

# # Configuration Keys (Custom by Seiva D'Arve)
#    extra-keys = [ \
#      ['ESC','ALT','/','HOME','PGUP','$','UP','KEYBOARD'], \
#      ['TAB','CTRL','~','END','PGDN','LEFT','DOWN','RIGHT']\
#    ]

# # Configuration Keys (Custom by Seiva D'Arve to use in tmux): It adds a macro "Ctrl + B" 
# Name: for-tmux
#     extra-keys = [ \
#       ['ESC','ALT','/','HOME','PGUP', \
#       {macro: "CTRL B", display: C-b, popup: {macro: "CTRL b", display: C-b}}, \
#       'UP','KEYBOARD'],['TAB','CTRL','~','END','PGDN','LEFT','DOWN','RIGHT']\
#     ]

# Configuration Keys (Custom by Seiva D'Arve to use in terminal emacs will scrool horizontal): It adds a macro "Ctrl + B" and "CTRL + F"
# Name: for-emacs-1
#    extra-keys = [ \
#      ['ESC','ALT','/', \
#      {macro: "PGUP", display: ‚áß, popup: {macro: "PGUP", display: ·Ø§}}, \
#      {macro: "CTRL F", display: ‚Ü§, popup: {macro: "CTRL f", display: Dir}}, \
#      'UP', \
#      {macro: "CTRL B", display: ‚Ü¶, popup: {macro: "CTRL B", display: Esq}}, \
#      'KEYBOARD'],['TAB','CTRL','~', \
#      {macro: "PGDN", display: ‚á©, popup: {macro: "PGDN", display: ·Ø•}}, \
#      'LEFT','DOWN','RIGHT','‡•ê']\
#      ]


# Configuration Keys (Custom by Seiva D'Arve to use in terminal emacs will scrool horizontal): It adds a macro "Ctrl + B" and "CTRL + F"
# Name: for-emacs-2
#    extra-keys = [ \
#      [ \
#      'ESC', \
#      {macro: "ALT", display: ‚å•, popup: {macro: "ESC", display: ‚å•}}, \
#      '/', \
#      {macro: "PGUP", display: ‚áß, popup: {macro: "PGUP", display: ‚áß}}, \
#      {macro: "F8", display: ‚Ü§, popup: {macro: "F8", display: Dir}}, \
#      'UP', \
#      {macro: "F9", display: ‚Ü¶, popup: {macro: "F9", display: Esq}}, \
#      'KEYBOARD'],['TAB', \
#      {macro: "CTRL", display: ‚å§, popup: {macro: "ESC", display: ‚å§}}, \
#      '~', \
#      {macro: "PGDN", display: ‚á©, popup: {macro: "PGDN", display: ‚á©}}, \
#      \
#      'LEFT','DOWN','RIGHT', \
#      {macro: "F7", display: ‡•ê, popup: {macro: "F7", display: ‡•ê}} \
#      ]\
#      ]



# Name: for-omni-key-triple-button (version 1: Beginning of the realisation about the use case of the property 'popup')
  # Note: "popup" means you can drag up each key to create a second function
  extra-keys = [[ \
                 {key: ESC,    popup:   {macro: "CTRL c ENTER CTRL d", display: "tmux exit"}}, \
                 {key: ALT,    display: "ALT"}, \
                 {key: PGUP,   display: ‚áß},     \
                 {key: "F8",   display: ‚Ü§},     \
                 'UP',                          \
                 {key: "F9",   display: ‚Ü¶}, \
                 {key: "F5",   display: ‚í∂, popup: {macro: "/", display: "/"}},   \
                 {key: KEYBOARD, popup: {macro: "ENTER", display: "ENTER"}} \
               ], \
                  \
                  \
               [  \
                 'TAB',                         \
                 {key: CTRL  , display: "CTRL"},\
                 {key: "PGDN", display: ‚á©},     \
                 'LEFT',                        \
                 'DOWN',                        \
                 'RIGHT',                       \
                 {key: "F6",   display: ‚í∑},     \
                 {key: "F7",   display: ‡•ê, popup: {macro: "f-reset-omni-key ENTER", display: "Reset all"}} \
               ]]

                 #{key: ALT,    display: ‚å•, popup: {macro: "ALT", display: "Alt"}}, \

###############
# Colors/themes
###############

### Force black colors for drawer and dialogs
# (It make the app drawer black. Terminal must restart for this)
# use-black-ui = true

###############
# HW keyboard shortcuts
###############

### Disable hardware keyboard shortcuts.
# disable-hardware-keyboard-shortcuts = true

### Open a new terminal with ctrl + t (volume down + t)
# shortcut.create-session = ctrl + t

### Go one session down with (for example) ctrl + 2
shortcut.next-session = ctrl + n

### Go one session up with (for example) ctrl + 1
shortcut.previous-session = ctrl + p

### Rename a session with (for example) ctrl + n
# shortcut.rename-session = ctrl + n

###############
# Bell key
###############

### Vibrate device (default).
# bell-character = vibrate

### Beep with a sound.
# bell-character = beep

### Ignore bell character.
# bell-character = ignore

###############
# Back key
###############

### Send the Escape key.
# back-key=escape

### Hide keyboard or leave app (default).
# back-key=back

###############
# Keyboard issue workarounds
###############

### Letters might not appear until enter is pressed on Samsung devices
# enforce-char-based-input = true

### ctrl+space (for marking text in emacs) does not work on some devices
# ctrl-space-workaround = true
