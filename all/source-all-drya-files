#!/bin/bash
# Title: source-all-drya-files
# Place in this file all script you need ~/.bashrc to recognize
# Description: At ~/.bashrc you should place only ONE line to source this file for DRYa, and this file should source all others
# Use: Initiate all other apps and initiate persistent functions
# drya-message: 
   ## (cannot run this command because variable is not defined yet): echo "file: source-all-drya-files: first line" >> $DRYa_MESSAGES

# Repository: DRYa (internal files - part 1)
   # Configuring variable for DRYa messages
      mkdir -p ~/.config/h.h/drya/

      DRYa_MESSAGES="$HOME/.config/h.h/drya/.dryaMessages"
      export DRYa_MESSAGES
      echo -e "# Title: DRYa Messages (verbose output for apps)" > ~/.config/h.h/drya/.dryaMessages
      echo -e "# Messages started at: $(date) \n" >> ~/.config/h.h/drya/.dryaMessages

   # Add script drya.sh to PATH variable (try: echo $PATH) 
      export PATH=$PATH:${v_REPOS_CENTER}/DRYa/drya.sh

   # Display info about it at the screen when DRYa is loaded by the terminal
      figlet DRYa; echo "DRYa (app manager) is online"
      echo " > Find verbose output (apps included) at:"
      echo " >   variable: '\$DRYa_MESSAGES' (that stores the file name):"
      echo " >   $DRYa_MESSAGES"
      echo " > You can also send text to: '\$DRYa_MESSAGES' example:"
      echo " >   $ echo \"Example-App: Hi there\" >> \$DRYa_MESSAGES"
      echo " > Read the messages with:"
      echo " >   $ drya msgs"
      echo

# Display the standard welcome termux message
   # Testing with the command 'uname -o' where the output should be "Android" to see if the termux is the terminal running
   # Also sending the error message to /dev/null in case dWiki repository is not yet downloaded side-by-side with DRYa
   if [ $(uname -o) == "Android" ]; then cat ${v_REPOS_CENTER}/dWiki/termux/default-welcome-screen-text 2>/dev/null; fi

# Neofetch is not needed... It is just for fun
   neofetch 2>/dev/null

# Dependency: figlet
   # Not every instalation of figlet comes witht the same standard font, lets corret that
   alias figlet="figlet -f standard.flf" # My favourite font is called standard.flf ## CAREFULL, this font may be missing

# Repository: CBorg
      alias C="bash ${v_REPOS_CENTER}/CBorg/CB.sh"

# Repository: dWiki
      alias dwiki="bash ${v_REPOS_CENTER}/dWiki/dwiki.sh"
      
# Repository: scratch-paper
      alias Qsend="bash ${v_REPOS_CENTER}/scratch-paper/quick-sender.sh"

# Repository: ezGIT
   # Define a key to call the entire program
      alias G="bash ${v_REPOS_CENTER}/ezGIT/ezGIT.sh"
      # uDev: for some repos, must run a script that searches for updates at terminal startup

   # Load all alternative git alias:
      source ${v_REPOS_CENTER}/ezGIT/all/etc/config-bash-alias

   #uDev: #bash ezGIT/all/bin/automatic uploader for repos like "omni-log-Dv" that are meant to be ALWAYS in the "cloud" uDev: this script will run at terminal startup and will upload+download a list of file always.
   #uDev: #for messenger-like comunications: download+upload content for a private github repo and after the other mobile phone downloads it, use git to remove it from the git log permanently
   
# Repository: moedaz
   #alias mo="bash ${v_REPOS_CENTER}/moedaz/moedaz.sh" ## Exists inside the file 'source-all-moedaz-files'
   source ${v_REPOS_CENTER}/moedaz/all/source-all-moedaz-files 2>/dev/null
   source ~/.config/h.h/moedaz/terminal-text-color 2>/dev/null

# Repository: QR-walking-stick (inside dWiki/TODO-apps)
   alias qr="bash ${v_REPOS_CENTER}/dWiki/TODO-apps/QR-walking-stick/store-data-from-QRcodeApp.sh"

# Repository: upK and upK-diario-Dv
   source /data/data/com.termux/files/home/Repositories/upK/all/bin/bash/time.sh 2>/dev/null
   alias upk="bash ${v_REPOS_CENTER}/upK/upk.sh"
   alias upkd="bash ${v_REPOS_CENTER}/upK-diario-Dv/upk.sh"
   # uDev: alias "upk dia"="...upk-diario-Dv"
   
   # NOTE: reporiory "upk" when called on the terminal without argument, it will call "upK-diario-Dv" if existent

# Repository 112-Shiva-Sutras
   alias ss="bash ${v_REPOS_CENTER}/112-Shiva-Sutras/ss.sh"
   alias SS="ss all | less"

# Repository yogaBashApp
   # Making use of Sadhguru Presence features
      alias sadhguru-presence="${v_REPOS_CENTER}/yogaBashApp/sadhguru-presence.sh"
      alias termux-stop="termux-media-player stop"

   # Making use of Shambavi features
      alias shambavi="${v_REPOS_CENTER}/yogaBashApp/shambavi.sh"

# Repository row-reader
   alias rr="bash ${v_REPOS_CENTER}/row-reader/row-reader.sh"

# Repository: DRYa (internal files - part 2)
   # Remove temporary dir created by DRYa's other scripts
      rm -rf ~/.tmp/

   # Enable/Disable verbose output for this file:
      # Define the function first:
         function f_verbose_start-1 {
            echo "DRYa: file running: ${DRYa_HEART}" >> $DRYa_MESSAGES
            # echo "Installed at.."
         }

      f_verbose_start-1  ##Comment/Uncomment this line to toggle ON or OFF

   # Sourcing DRYa's own configs
      source ${v_REPOS_CENTER}/DRYa/all/etc/config-bash-alias
      alias ,.="vim ${v_REPOS_CENTER}/DRYa/all/etc/config-bash-alias"

   # DRYa executable
      alias drya="bash ${v_REPOS_CENTER}/DRYa/drya.sh"
   
   # Drya bin files
      # Sourcing all stand-alone scripts
         source ${v_REPOS_CENTER}/DRYa/all/bin/bin/*

      # Sourcing a specific list of scripts
         alias master-emacs="${v_REPOS_CENTER}/DRYa/all/bin/master-emacs.sh"

   # Sourcing the temporary/local configs for DRYa (if they ido not exist, send err: /dev/null)) It can store temporary variables for debugging process of some app
      source ~/.config/h.h/drya/.dryarc 2>/dev/null
      source ${v_REPOS_CENTER}/DRYa/all/var/appended-from-dryarc 2>/dev/null

# drya-message: 
   echo "file: source-all-drya-files: last line" >> $DRYa_MESSAGES
